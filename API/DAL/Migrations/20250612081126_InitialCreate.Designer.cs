// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(MarcacoesOnlineDbContext))]
    [Migration("20250612081126_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.ActoClinico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidoDeMarcacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfissionalId")
                        .HasColumnType("int");

                    b.Property<string>("SubSistemaDeSaude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDeActoClinico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoDeMarcacaoId");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("ActosClinico");
                });

            modelBuilder.Entity("Model.Adminstractivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Adminstractivos");
                });

            modelBuilder.Entity("Model.PedidoDeMarcacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminstractivoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDeAgendamentoDoPedidoDeMarcacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCriacaoDoPedidoMarcacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstadoDoPedidoDeMarcacao")
                        .HasColumnType("int");

                    b.Property<string>("IntervaloDeDatasDoPedidoDeMarcacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UtenteRegistadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminstractivoId");

                    b.HasIndex("UtenteRegistadoId");

                    b.ToTable("PedidosDeMarcacao");
                });

            modelBuilder.Entity("Model.Profissional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profissionais");
                });

            modelBuilder.Entity("Model.UtenteRegistado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UtentesRegistado");
                });

            modelBuilder.Entity("Model.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoDoUtilizador")
                        .HasColumnType("bit");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoUtilizador")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("UrlDaFotografia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilizadores");

                    b.HasDiscriminator<string>("TipoUtilizador").HasValue("Utilizador");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Model.Administrador", b =>
                {
                    b.HasBaseType("Model.Utilizador");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int");

                    b.ToTable("Utilizadores");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("Model.ActoClinico", b =>
                {
                    b.HasOne("Model.PedidoDeMarcacao", "PedidoDeMarcacao")
                        .WithMany("ActosClinico")
                        .HasForeignKey("PedidoDeMarcacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Profissional", "Profissional")
                        .WithMany()
                        .HasForeignKey("ProfissionalId");

                    b.Navigation("PedidoDeMarcacao");

                    b.Navigation("Profissional");
                });

            modelBuilder.Entity("Model.PedidoDeMarcacao", b =>
                {
                    b.HasOne("Model.Adminstractivo", "Adminstractivo")
                        .WithMany()
                        .HasForeignKey("AdminstractivoId");

                    b.HasOne("Model.UtenteRegistado", null)
                        .WithMany("HistoricoDePedidoDeMarcacao")
                        .HasForeignKey("UtenteRegistadoId");

                    b.Navigation("Adminstractivo");
                });

            modelBuilder.Entity("Model.UtenteRegistado", b =>
                {
                    b.HasOne("Model.Utilizador", "Utilizador")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("Model.PedidoDeMarcacao", b =>
                {
                    b.Navigation("ActosClinico");
                });

            modelBuilder.Entity("Model.UtenteRegistado", b =>
                {
                    b.Navigation("HistoricoDePedidoDeMarcacao");
                });
#pragma warning restore 612, 618
        }
    }
}
